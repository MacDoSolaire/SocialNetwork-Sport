{% extends "base.html.twig" %}

{% block title %}Commentaire{% endblock %}
{% block stylesheets %}
    <link rel="preconnect" href="https://fonts.gstatic.com/%22%3E">
    <link href="https://fonts.googleapis.com/css2?family=Rubik+Mono+One&display=swap" rel="stylesheet">
    <link href="{{ absolute_url(asset('css/evenementDetail.css')) }}" type="text/css" rel="stylesheet" />
{% endblock %}

{% block body %}
    <nav class="navbar">
        <ul>
            <a class="btn-feed" href="{{ path('index') }}"> Index</a>
            <a class ="btn-feed" href="{{ path('search_publication') }}">Rechercher</a>
            {% if app.user %}
                <a class="btn-feed" href="{{ path('app_logout') }}"> Deconnexion</a>
            {% else %}
                <a class="btn-feed" href="{{ path('app_login') }}"> Connexion</a>
            {% endif %}
            <a class="btn-profil"> <span class="iconify" data-inline="false" data-icon="vs:profile" style="font-size: 30px; margin-right: 7px;"></span> </a>
        </ul>
    </nav>

    <div class="feed">
        <div class="publier">
            <!-- Nom du membre -->
            <h3 class="membre">{{ evenement.membre.prenom }} {{ evenement.membre.nom }}</h3>

           <span class="activite"> Activités :
            {% for activite in evenement.activites %}
                {{ activite.nom }}
            {% endfor %}
            </span>

            <!-- date -->
            <span class="dateEvent">Du {{ evenement.dateDeb|date('d/m/Y H:i:s') }} au {{ evenement.dateFin|date('d/m/Y H:i:s') }}</span>

            <span class="lieu"> Adresse : {{ evenement.adresse }}</span>

            {% set difference = evenement.dateFin.diff(evenement.dateDeb) %}
            {% set leftDays = difference.days %}
            {% if leftDays <= 1 %}
                <span class="jour"> Durée : 1 Jour</span>
            {% else %}
                <span class="jour">Durée : {{ leftDays }} Jours</span>
            {% endif %}

            <p class="message">{{ evenement.message }}</p>

            <a  class="comment" href="{{ path('evenement_reply', {'evenementId': evenement.id}) }}">
                <i class="far fa-comment"></i>
                <span class="js-replies"> {{ evenement.replies | length }}</span>
            </a>

            <a href="{{ path('evenement_like', {'evenementId': evenement.id}) }}" class="js-like">
                {% if app.user and evenement.isLikedByMember(app.user) %}
                    <i class="fas fa-heart"></i>
                    <span class="js-likes"> {{ evenement.evenementLikes | length }}</span>
                    <span class="js-label"> Je n'aime plus</span>
                {% else %}
                    <i class="far fa-heart"></i>
                    <span class="js-likes"> {{ evenement.evenementLikes | length }}</span>
                    <span class="js-label"> J'aime</span>
                {% endif %}
            </a>

            <a class="js-join" href="{{ path('evenement_join', {'evenementId': evenement.id}) }}">
                {% if app.user and evenement.isMemberParticipating(app.user) %}
                    <i class="fas fa-calendar-check"></i>
                    <span class="js-joined"> {{ evenement.participations | length }}</span>
                    <span class="js-maxJoin"> / {{ evenement.nbPers }}</span>
                {% else %}
                    <i class="far fa-calendar-check"></i>
                    <span class="js-joined"> {{ evenement.participations | length }}</span>
                    <span class="js-maxJoin"> / {{ evenement.nbPers }}</span>
                {% endif %}
            </a>
        </div>

        <div class="reply">
            {{ form_start(replyForm, {'attr': {'class': 'row'}}) }}
            <div class="msgPubli">
                {{ form_widget(replyForm.message, {'attr': { 'placeholder': 'Ecrivez votre réponse'}}) }}
                <span class="error">{{ form_errors(replyForm.message) }}</span>
            </div>
            <input type="submit" value="Envoyer">
            {{ form_end(replyForm) }}
        </div>
    </div>

    <div class="feedReply">
        {% for reply in evenement.replies %}
            <div class="reponse">
                 <h3 class="membre">{{ reply.membre.prenom }} {{ reply.membre.nom }}</h3>

                 <span class="date">{{ reply.date|date('d/m/Y H:i:s') }}</span>

                 <p class="message">{{ reply.message }}</p>
            <div>
        {% endfor %}
    </div>

{% endblock %}

{% block javascripts %}
    <script>
        document.querySelectorAll('a.js-like').forEach(function (link) {
            link.addEventListener("click", onBtnLikeClick);
        })

        document.querySelectorAll('a.js-join').forEach(function (link) {
            link.addEventListener("click", onBtnJoinClick);
        })

        function onBtnJoinClick(event) {
            event.preventDefault();

            const url = this.href;
            const spanCount = this.querySelector('span.js-joined');
            const icone = this.querySelector('i');

            fetch(url, { method: 'Post' })
                .then((response) => {
                    if (response.ok) {
                        return response.json();
                    }
                })
                .then(function (data){
                    const spanCountContent = data.nbParticipation;
                    if (parseInt(spanCount.textContent) !== spanCountContent) {
                        spanCount.textContent = spanCountContent;
                        if (icone.classList.contains('fas')) {
                            icone.classList.replace('fas', 'far');
                        } else {
                            icone.classList.replace('far', 'fas');
                        }
                    } else {
                        window.alert('Nombre maximum de participants atteint');
                    }
                });
        }

        function onBtnLikeClick(event) {
            event.preventDefault();

            const url = this.href;
            const spanCount = this.querySelector('span.js-likes');
            const spanText = this.querySelector('span.js-label');
            const icone = this.querySelector('i');

            fetch(url, { method: 'Post' })
                .then(response => response.json())
                .then(function (data){
                    spanCount.textContent = data.nbLike;

                    if (icone.classList.contains('fas')) {
                        icone.classList.replace('fas', 'far');
                        spanText.textContent = "J'aime";
                    } else {
                        icone.classList.replace('far', 'fas');
                        spanText.textContent = "Je n'aime plus";
                    }
                });
        }
    </script>
{% endblock %}