{% extends 'base.html.twig' %}

{% block title %}Recherche{% endblock %}

{% block stylesheets %}
    <link rel="preconnect" href="https://fonts.gstatic.com/%22%3E">
    <link href="https://fonts.googleapis.com/css2?family=Rubik+Mono+One&display=swap" rel="stylesheet">
    <link href="css/recherche.css" type="text/css" rel="stylesheet" />
{% endblock %}

{% block body %}
    <i class="fa fa-arrow-left" aria-hidden="true" onclick="location.href = '/index'" style="font-size: 40px;"></i>
    <a class="btn-publi" href="publication"> <i style="font-size: 50px; position: fixed; float: right; right: 7px; top: 92%;" class="fas fa-plus"></i> </a>

    <a class="btn-msg" href="messages"> <i style="font-size: 50px;position: fixed;top: 92%;" class="fas fa-comment-alt"></i> </a>

    <a class="btn-event" href="evenement"> <i style="font-size: 50px; position: fixed; float: right; right: 7px; top: 80%;" class="fas fa-calendar-alt"></i> </a>

    <h1 class="titre_recherche"> Recherche </h1>

    {{ form(search_form) }}

    <div class="feed">
        <!-- Boucle pour afficher les resultat des recherches -->
        {% for r in res %}
        <!-- Boucle pour afficher les publications -->
        <div class="publier">
            <!-- Nom du membre -->
            <h3 class="membre">{{ r.membre.prenom }} {{ r.membre.nom }}</h3>

            <!-- date -->
            <span class="date">{{ r.date|date('d/m/Y H:i:s') }}</span>

            <!-- message -->
            <p class="message">{{ r.message }}</p>

            <a  class="comment" href="{{ path('publication_reply', {'publicationId': r.id}) }}">
                <i class="far fa-comment"></i>
                <span class="js-replies"> {{ r.replies | length }}</span>
            </a>

            <a href="{{ path('publication_like', {'publicationId': r.id}) }}" class="js-like">
                {% if app.user and r.isLikedByMember(app.user) %}
                    <i class="fas fa-heart"></i>
                    <span class="js-likes"> {{ r.publicationLikes | length }}</span>
                    <span class="js-label"> Je n'aime plus</span>
                {% else %}
                    <i class="far fa-heart"></i>
                    <span class="js-likes"> {{ r.publicationLikes | length }}</span>
                    <span class="js-label"> J'aime</span>
                {% endif %}
            </a>
        </div>
        {% endfor %}
    </div>
{% endblock %}

{% block javascripts %}
    <script>
        document.querySelectorAll('a.js-like').forEach(function (link) {
            link.addEventListener("click", onBtnLikeClick);
        })

        document.querySelectorAll('a.js-join').forEach(function (link) {
            link.addEventListener("click", onBtnJoinClick);
        })

        function onBtnJoinClick(event) {
            event.preventDefault();

            const url = this.href;
            const spanCount = this.querySelector('span.js-joined');
            const icone = this.querySelector('i');

            fetch(url, { method: 'Post' })
                .then((response) => {
                    if (response.ok) {
                        return response.json();
                    }
                })
                .then(function (data){
                    const spanCountContent = data.nbParticipation;
                    if (spanCount.textContent !== spanCountContent) {
                        spanCount.textContent = spanCountContent;
                        if (icone.classList.contains('fas')) {
                            icone.classList.replace('fas', 'far');
                        } else {
                            icone.classList.replace('far', 'fas');
                        }
                    } else {
                        window.alert('Nombre maximum de participants atteint');
                    }
                });
        }

        function onBtnLikeClick(event) {
            event.preventDefault();

            const url = this.href;
            const spanCount = this.querySelector('span.js-likes');
            const spanText = this.querySelector('span.js-label');
            const icone = this.querySelector('i');

            fetch(url, { method: 'Post' })
                .then(response => response.json())
                .then(function (data){
                    spanCount.textContent = data.nbLike;

                    if (icone.classList.contains('fas')) {
                        icone.classList.replace('fas', 'far');
                        spanText.textContent = "J'aime";
                    } else {
                        icone.classList.replace('far', 'fas');
                        spanText.textContent = "Je n'aime plus";
                    }
                });
        }
    </script>
{% endblock %}